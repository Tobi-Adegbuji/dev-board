[{"C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\index.js":"1","C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\App.js":"2","C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\serviceWorker.js":"3","C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\app\\store.js":"4","C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\Header.jsx":"5","C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\HeaderItem.jsx":"6","C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\Sidebar.jsx":"7","C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\Feed.jsx":"8","C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\PostItem.jsx":"9","C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\Post.jsx":"10","C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\firebase.jsx":"11","C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\features\\userSlice.js":"12","C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\Login.jsx":"13"},{"size":644,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":589,"mtime":1609707135773,"results":"16","hashOfConfig":"15"},{"size":5141,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":186,"mtime":1609706720472,"results":"18","hashOfConfig":"15"},{"size":1553,"mtime":1609758400382,"results":"19","hashOfConfig":"15"},{"size":514,"mtime":1609359152421,"results":"20","hashOfConfig":"15"},{"size":1405,"mtime":1609446434144,"results":"21","hashOfConfig":"15"},{"size":2965,"mtime":1609607534502,"results":"22","hashOfConfig":"15"},{"size":259,"mtime":1609600039950,"results":"23","hashOfConfig":"15"},{"size":982,"mtime":1609603385185,"results":"24","hashOfConfig":"15"},{"size":645,"mtime":1609605617377,"results":"25","hashOfConfig":"15"},{"size":1080,"mtime":1609989885182,"results":"26","hashOfConfig":"15"},{"size":3307,"mtime":1609990422650,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ha6j05",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\index.js",[],["56","57"],"C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\App.js",[],"C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\serviceWorker.js",[],"C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\app\\store.js",[],"C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\Header.jsx",[],"C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\HeaderItem.jsx",[],"C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\Sidebar.jsx",[],"C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\Feed.jsx",["58"],"import React, { useState, useEffect } from \"react\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport \"./Feed.css\";\r\nimport PostItem from \"./PostItem\";\r\nimport BurstModeIcon from \"@material-ui/icons/BurstMode\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\nimport Post from \"./Post\";\r\nimport { db } from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { ListItemAvatar } from \"@material-ui/core\";\r\n\r\nfunction Feed() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  /*Use Effect hook used to fire off code when the feed component loads\r\n  It can also be used to fire off code when the component rerenders if we dont pass a second argument*/\r\n  useEffect(() => {\r\n    //Getting current real-time snapshot of posts collection\r\n    db.collection(\"posts\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) =>\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        )\r\n      );\r\n  }, []);\r\n\r\n  const submitPost = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"posts\").add({\r\n      name: \"Tobi Adegbuji\",\r\n      description: \"Java Developer\",\r\n      message: userInput,\r\n      photoUrl: \"\",\r\n      //Using the server timestamp allows the time to be correct regardless of timezone\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"feed\">\r\n      <div className=\"feed__postContainer\">\r\n        <div className=\"feed__post\">\r\n          <CreateIcon />\r\n          <form>\r\n            <input\r\n              value={userInput}\r\n              onChange={(e) => setUserInput(e.target.value)}\r\n              type=\"text\"\r\n            />\r\n            <button onClick={submitPost} type=\"submit\">\r\n              Send\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"feed__postItems\">\r\n          <PostItem Icon={BurstModeIcon} title=\"Photo\" color=\"lightblue\" />\r\n          <PostItem Icon={VideocamIcon} title=\"Video\" color=\"lightgreen\" />\r\n        </div>\r\n      </div>\r\n      {posts.map(({ id, data: { name, description, message, photoUrl } }) => (\r\n        <Post\r\n          // If there are 1000 elements in a list, react will only rerender 1\r\n          // if a new one is added instead of all of them. This is why the key is important\r\n          key={id}\r\n          name={name}\r\n          description={description}\r\n          message={message}\r\n          photoUrl={photoUrl}\r\n        />\r\n      ))}\r\n      <Post\r\n        name=\"Tobi Adegbuji\"\r\n        description=\"Java Developer\"\r\n        photoUrl=\"\"\r\n        message=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis ex animi ipsa neque quibusdam sunt delectus aspernatur ullam obcaecati ut aliquam cupiditate dolor necessitatibus, quidem inventore? Sequi rerum odio inventore.\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\PostItem.jsx",[],"C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\Post.jsx",[],"C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\firebase.jsx",[],"C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\features\\userSlice.js",[],"C:\\Users\\Adegb\\Documents\\React\\dev-board\\src\\Login.jsx",["59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":10,"column":10,"nodeType":"66","messageId":"67","endLine":10,"endColumn":24},{"ruleId":"64","severity":1,"message":"68","line":41,"column":9,"nodeType":"66","messageId":"67","endLine":41,"endColumn":17},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'ListItemAvatar' is defined but never used.","Identifier","unusedVar","'loginApp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]